version: '3.8'
services:
  app:
    build:
      context: ""
      dockerfile: Dockerfile
      args:
        USER_ID: '${WWWUSER:-1000}'
        GROUP_ID: '${WWWGROUP:-1000}'
        USER: '${USER:-whoami}'
    container_name: php-framework-pro-app
    restart: always
    working_dir: /var/www/
    volumes:
      - ../:/var/www
  nginx:
    image: nginx:1.19-alpine
    container_name: php-framework-pro-nginx
    restart: always
    ports:
      - "8000:80"
    volumes:
      - ../:/var/www
      - ./nginx:/etc/nginx/conf.d
  db:
    container_name: php-framework-pro-db
    image: mysql:8.0
    volumes:
      - ./storage/mysql:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: php-framework-pro-phpmyadmin
    restart: always
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - 8080:80
  mailhog:
    image: mailhog/mailhog
    container_name: php-framework-pro-mailhog
    restart: always
    logging:
      driver: none
    ports:
      - 8025:8025
      - 1025:1025
  cron:
    container_name: php-framework-pro-cron
    build: ./cron
    volumes:
      - ../:/var/www
      - ./log/cron:/var/log/cron
